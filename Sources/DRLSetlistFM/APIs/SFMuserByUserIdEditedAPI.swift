//
// SFMuseruserIdeditedAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class SFMuserByUserIdEditedAPI {
    /**
     .

     - parameter userId: (path) the user&#x27;s userId 
     - parameter p: (query) the number of the result page (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func sfmUserUserIdEditedGetUserEditedSetlists(userId: String, p: Int? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        sfmUserUserIdEditedGetUserEditedSetlistsWithRequestBuilder(userId: userId, p: p).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     .
     - GET /1.0/user/{userId}/edited

     - API Key:
       - type: apiKey X-API-KEY 
       - name: ApiKeyAuth
     - examples: [{contentType=application/json, example=""}]
     - parameter userId: (path) the user&#x27;s userId 
     - parameter p: (query) the number of the result page (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func sfmUserUserIdEditedGetUserEditedSetlistsWithRequestBuilder(userId: String, p: Int? = nil) -> RequestBuilder<Void> {
        var path = "/1.0/user/{userId}/edited"
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{userId}", with: userIdPostEscape, options: .literal, range: nil)
        let URLString = DRLSetlistFM.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "p": p?.encodeToJSON()
        ])


        let requestBuilder: RequestBuilder<Void>.Type = DRLSetlistFM.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
